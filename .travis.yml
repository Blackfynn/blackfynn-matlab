if: tag IS present

sudo: required # required to run docker

services:
  - docker

language: ruby

env:
  - DOCKER_COMPOSE_VERSION=1.22.0

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

cache:
  - bundler # caching bundler gem packages will speed up build

script:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker-compose build
  - docker-compose up --exit-code-from matlab
  - set -e; cd docs && bundle exec jekyll build

before_deploy:
- docker cp blackfynn-matlab_matlab_1:/blackfynn-matlab/setup/build/ .
- mkdir artifact || true
- mkdir artifact-latest || true
- cp build/blackfynn.mltbx artifact/blackfynn-${TRAVIS_TAG}.mltbx
- cp build/blackfynn.mltbx artifact-latest/blackfynn.mltbx
- cp build/matlab_version.txt artifact-latest/matlab_version.txt

deploy:
  - provider: s3
    access_key_id: "$AWS_ACCESS_KEY_ID"
    secret_access_key: "$AWS_SECRET_ACCESS_KEY"
    region: us-east-1
    bucket: "$S3_BUCKET_CLIENT"
    skip_cleanup: true
    local-dir: artifact
    upload-dir: public-downloads/blackfynn-matlab/${TRAVIS_TAG}
    on:
      tags: true
  - provider: s3
    access_key_id: "$AWS_ACCESS_KEY_ID"
    secret_access_key: "$AWS_SECRET_ACCESS_KEY"
    region: us-east-1
    bucket: "$S3_BUCKET_CLIENT"
    skip_cleanup: true
    local-dir: artifact-latest
    upload-dir: public-downloads/blackfynn-matlab/latest
    on:
      tags: true
  - provider: s3
    access_key_id: "$AWS_ACCESS_KEY_ID"
    secret_access_key: "$AWS_SECRET_ACCESS_KEY"
    bucket: "$S3_BUCKET_DOCS"
    skip_cleanup: true
    region: us-east-1
    local_dir: docs/_site
    upload-dir: matlab
    on:
      tags: true

after_deploy:
  - rm -rf build/ artifact/ artifact-latest/
  - pip install --user awscli
  - export PATH=$PATH:$HOME/.local/bin # put aws in the path
  - set -e; aws cloudfront create-invalidation --distribution-id $CF_DISTRO_ID --paths /matlab/*
